
name: Dry Run changes
on:
  push:
    branches:
      - '*'
      #- '!main'
env:
  # Add new Microservices directories here - match to kustomize dir name
  DIRECTORY_LIST:
    "
    app/crq_configs
    "

jobs:
   # Based on the branch gather the environment to deploy to..
  Identify-changes:
    runs-on: ["self-hosted"]
    name: test_flow
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: install requirements
        run: |
          pip3 install -r requirements.txt
      - name: provide filters for directory changes
        id: get_dir
        run: |
          # Fetch the list of directories from the environment variable
          DIRECTORY_LIST="${{ env.DIRECTORY_LIST }}"
          IFS=$', ' read -ra DIRECTORIES <<< "$DIRECTORY_LIST"
          CHANGE_STRUCTURE+=$""
          DEL_STRUCTURE+=$""
          for DIR in "${DIRECTORIES[@]}"; do
            CHANGE_STRUCTURE+="./$DIR:\n"
            CHANGE_STRUCTURE+="  - added|modified|deleted: $DIR/**\n"
          done
          # Save multiline to output FILTER
          echo "FILTER<<EOF" >> $GITHUB_OUTPUT
          echo -e "$CHANGE_STRUCTURE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      # Checkout
      - name: Checkout branch
        uses: actions/checkout@v3
      # Check for modified directories
      - name: Apply service modified filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          base: "main"
          filters: |
            ${{ steps.get_dir.outputs.FILTER }}
      - name: compare container image 
        id: changes
        run: |
          MS_LIST=${{toJSON(steps.filter.outputs.changes)}}
          # Iterate through the JSON array using jq
          for dir in $(echo "$MS_LIST" | jq -r '.[]'); do
            input=$dir
            config=$(basename "$input")
            echo "CONFIG=$config" >> "$GITHUB_OUTPUT"
          done

      - name: Run nornir
        run: |
          changed_configs='${{steps.changes.outputs.CONFIG}}'
          python3 configure_prod_devices.py --dry_run --list $changed_configs
